# source: https://eu1.prisma.sh/shevchenko_yury-d70d0e/mindHive-backend/dev
# timestamp: Tue Sep 08 2020 16:20:44 GMT+0200 (Central European Summer Time)

type AggregateAuthEmail {
  count: Int!
}

type AggregateAuthInvite {
  count: Int!
}

type AggregateAuthParticipant {
  count: Int!
}

type AggregateAuthToken {
  count: Int!
}

type AggregateClass {
  count: Int!
}

type AggregateConsent {
  count: Int!
}

type AggregateData {
  count: Int!
}

type AggregateMessage {
  count: Int!
}

type AggregateProfile {
  count: Int!
}

type AggregateResult {
  count: Int!
}

type AggregateSchool {
  count: Int!
}

type AggregateStudy {
  count: Int!
}

type AggregateTask {
  count: Int!
}

type AggregateTemplate {
  count: Int!
}

type AuthEmail implements Node {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  profile: Profile!
  settings: Json
}

"""A connection to a list of items."""
type AuthEmailConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthEmailEdge]!
  aggregate: AggregateAuthEmail!
}

input AuthEmailCreateInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileCreateOneWithoutAuthEmailInput!
}

input AuthEmailCreateManyWithoutProfileInput {
  create: [AuthEmailCreateWithoutProfileInput!]
  connect: [AuthEmailWhereUniqueInput!]
}

input AuthEmailCreateWithoutProfileInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

"""An edge in a connection."""
type AuthEmailEdge {
  """The item at the end of the edge."""
  node: AuthEmail!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthEmailOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  settings_ASC
  settings_DESC
}

type AuthEmailPreviousValues {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
}

type AuthEmailSubscriptionPayload {
  mutation: MutationType!
  node: AuthEmail
  updatedFields: [String!]
  previousValues: AuthEmailPreviousValues
}

input AuthEmailSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthEmailWhereInput
}

input AuthEmailUpdateInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileUpdateOneRequiredWithoutAuthEmailInput
}

input AuthEmailUpdateManyDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateManyMutationInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateManyWithoutProfileInput {
  create: [AuthEmailCreateWithoutProfileInput!]
  connect: [AuthEmailWhereUniqueInput!]
  set: [AuthEmailWhereUniqueInput!]
  disconnect: [AuthEmailWhereUniqueInput!]
  delete: [AuthEmailWhereUniqueInput!]
  update: [AuthEmailUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthEmailUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthEmailScalarWhereInput!]
  upsert: [AuthEmailUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthEmailUpdateManyWithWhereNestedInput {
  where: AuthEmailScalarWhereInput!
  data: AuthEmailUpdateManyDataInput!
}

input AuthEmailUpdateWithoutProfileDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthEmailWhereUniqueInput!
  data: AuthEmailUpdateWithoutProfileDataInput!
}

input AuthEmailUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthEmailWhereUniqueInput!
  update: AuthEmailUpdateWithoutProfileDataInput!
  create: AuthEmailCreateWithoutProfileInput!
}

input AuthEmailWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthEmailWhereUniqueInput {
  id: ID
  email: String
}

type AuthInvite implements Node {
  id: ID!
  profile: Profile!
  invitedIn: Class!
}

"""A connection to a list of items."""
type AuthInviteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthInviteEdge]!
  aggregate: AggregateAuthInvite!
}

input AuthInviteCreateInput {
  id: ID
  profile: ProfileCreateOneWithoutAuthInviteInput!
  invitedIn: ClassCreateOneWithoutInvitesInput!
}

input AuthInviteCreateManyWithoutInvitedInInput {
  create: [AuthInviteCreateWithoutInvitedInInput!]
  connect: [AuthInviteWhereUniqueInput!]
}

input AuthInviteCreateManyWithoutProfileInput {
  create: [AuthInviteCreateWithoutProfileInput!]
  connect: [AuthInviteWhereUniqueInput!]
}

input AuthInviteCreateWithoutInvitedInInput {
  id: ID
  profile: ProfileCreateOneWithoutAuthInviteInput!
}

input AuthInviteCreateWithoutProfileInput {
  id: ID
  invitedIn: ClassCreateOneWithoutInvitesInput!
}

"""An edge in a connection."""
type AuthInviteEdge {
  """The item at the end of the edge."""
  node: AuthInvite!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthInviteOrderByInput {
  id_ASC
  id_DESC
}

type AuthInvitePreviousValues {
  id: ID!
}

input AuthInviteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
}

type AuthInviteSubscriptionPayload {
  mutation: MutationType!
  node: AuthInvite
  updatedFields: [String!]
  previousValues: AuthInvitePreviousValues
}

input AuthInviteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthInviteWhereInput
}

input AuthInviteUpdateInput {
  profile: ProfileUpdateOneRequiredWithoutAuthInviteInput
  invitedIn: ClassUpdateOneRequiredWithoutInvitesInput
}

input AuthInviteUpdateManyWithoutInvitedInInput {
  create: [AuthInviteCreateWithoutInvitedInInput!]
  connect: [AuthInviteWhereUniqueInput!]
  set: [AuthInviteWhereUniqueInput!]
  disconnect: [AuthInviteWhereUniqueInput!]
  delete: [AuthInviteWhereUniqueInput!]
  update: [AuthInviteUpdateWithWhereUniqueWithoutInvitedInInput!]
  deleteMany: [AuthInviteScalarWhereInput!]
  upsert: [AuthInviteUpsertWithWhereUniqueWithoutInvitedInInput!]
}

input AuthInviteUpdateManyWithoutProfileInput {
  create: [AuthInviteCreateWithoutProfileInput!]
  connect: [AuthInviteWhereUniqueInput!]
  set: [AuthInviteWhereUniqueInput!]
  disconnect: [AuthInviteWhereUniqueInput!]
  delete: [AuthInviteWhereUniqueInput!]
  update: [AuthInviteUpdateWithWhereUniqueWithoutProfileInput!]
  deleteMany: [AuthInviteScalarWhereInput!]
  upsert: [AuthInviteUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthInviteUpdateWithoutInvitedInDataInput {
  profile: ProfileUpdateOneRequiredWithoutAuthInviteInput
}

input AuthInviteUpdateWithoutProfileDataInput {
  invitedIn: ClassUpdateOneRequiredWithoutInvitesInput
}

input AuthInviteUpdateWithWhereUniqueWithoutInvitedInInput {
  where: AuthInviteWhereUniqueInput!
  data: AuthInviteUpdateWithoutInvitedInDataInput!
}

input AuthInviteUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthInviteWhereUniqueInput!
  data: AuthInviteUpdateWithoutProfileDataInput!
}

input AuthInviteUpsertWithWhereUniqueWithoutInvitedInInput {
  where: AuthInviteWhereUniqueInput!
  update: AuthInviteUpdateWithoutInvitedInDataInput!
  create: AuthInviteCreateWithoutInvitedInInput!
}

input AuthInviteUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthInviteWhereUniqueInput!
  update: AuthInviteUpdateWithoutProfileDataInput!
  create: AuthInviteCreateWithoutProfileInput!
}

input AuthInviteWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  profile: ProfileWhereInput
  invitedIn: ClassWhereInput
}

input AuthInviteWhereUniqueInput {
  id: ID
}

type AuthParticipant implements Node {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  profile: Profile!
  settings: Json
}

"""A connection to a list of items."""
type AuthParticipantConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthParticipantEdge]!
  aggregate: AggregateAuthParticipant!
}

input AuthParticipantCreateInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileCreateOneWithoutAuthParticipantInput!
}

input AuthParticipantCreateManyWithoutProfileInput {
  create: [AuthParticipantCreateWithoutProfileInput!]
  connect: [AuthParticipantWhereUniqueInput!]
}

input AuthParticipantCreateWithoutProfileInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

"""An edge in a connection."""
type AuthParticipantEdge {
  """The item at the end of the edge."""
  node: AuthParticipant!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthParticipantOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  settings_ASC
  settings_DESC
}

type AuthParticipantPreviousValues {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
}

type AuthParticipantSubscriptionPayload {
  mutation: MutationType!
  node: AuthParticipant
  updatedFields: [String!]
  previousValues: AuthParticipantPreviousValues
}

input AuthParticipantSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthParticipantWhereInput
}

input AuthParticipantUpdateInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileUpdateOneRequiredWithoutAuthParticipantInput
}

input AuthParticipantUpdateManyDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateManyMutationInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateManyWithoutProfileInput {
  create: [AuthParticipantCreateWithoutProfileInput!]
  connect: [AuthParticipantWhereUniqueInput!]
  set: [AuthParticipantWhereUniqueInput!]
  disconnect: [AuthParticipantWhereUniqueInput!]
  delete: [AuthParticipantWhereUniqueInput!]
  update: [AuthParticipantUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthParticipantUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthParticipantScalarWhereInput!]
  upsert: [AuthParticipantUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthParticipantUpdateManyWithWhereNestedInput {
  where: AuthParticipantScalarWhereInput!
  data: AuthParticipantUpdateManyDataInput!
}

input AuthParticipantUpdateWithoutProfileDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthParticipantWhereUniqueInput!
  data: AuthParticipantUpdateWithoutProfileDataInput!
}

input AuthParticipantUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthParticipantWhereUniqueInput!
  update: AuthParticipantUpdateWithoutProfileDataInput!
  create: AuthParticipantCreateWithoutProfileInput!
}

input AuthParticipantWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthParticipantWhereUniqueInput {
  id: ID
  email: String
}

type AuthToken implements Node {
  id: ID!
  token: String!
  tokenExpiry: String
  profile: Profile!
  email: String
}

"""A connection to a list of items."""
type AuthTokenConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthTokenEdge]!
  aggregate: AggregateAuthToken!
}

input AuthTokenCreateInput {
  id: ID
  token: String!
  tokenExpiry: String
  email: String
  profile: ProfileCreateOneWithoutAuthTokenInput!
}

input AuthTokenCreateManyWithoutProfileInput {
  create: [AuthTokenCreateWithoutProfileInput!]
  connect: [AuthTokenWhereUniqueInput!]
}

input AuthTokenCreateWithoutProfileInput {
  id: ID
  token: String!
  tokenExpiry: String
  email: String
}

"""An edge in a connection."""
type AuthTokenEdge {
  """The item at the end of the edge."""
  node: AuthToken!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthTokenOrderByInput {
  id_ASC
  id_DESC
  token_ASC
  token_DESC
  tokenExpiry_ASC
  tokenExpiry_DESC
  email_ASC
  email_DESC
}

type AuthTokenPreviousValues {
  id: ID!
  token: String!
  tokenExpiry: String
  email: String
}

input AuthTokenScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  tokenExpiry: String

  """All values that are not equal to given value."""
  tokenExpiry_not: String

  """All values that are contained in given list."""
  tokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  tokenExpiry_not_in: [String!]

  """All values less than the given value."""
  tokenExpiry_lt: String

  """All values less than or equal the given value."""
  tokenExpiry_lte: String

  """All values greater than the given value."""
  tokenExpiry_gt: String

  """All values greater than or equal the given value."""
  tokenExpiry_gte: String

  """All values containing the given string."""
  tokenExpiry_contains: String

  """All values not containing the given string."""
  tokenExpiry_not_contains: String

  """All values starting with the given string."""
  tokenExpiry_starts_with: String

  """All values not starting with the given string."""
  tokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  tokenExpiry_ends_with: String

  """All values not ending with the given string."""
  tokenExpiry_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
}

type AuthTokenSubscriptionPayload {
  mutation: MutationType!
  node: AuthToken
  updatedFields: [String!]
  previousValues: AuthTokenPreviousValues
}

input AuthTokenSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthTokenWhereInput
}

input AuthTokenUpdateInput {
  token: String
  tokenExpiry: String
  email: String
  profile: ProfileUpdateOneRequiredWithoutAuthTokenInput
}

input AuthTokenUpdateManyDataInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateManyMutationInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateManyWithoutProfileInput {
  create: [AuthTokenCreateWithoutProfileInput!]
  connect: [AuthTokenWhereUniqueInput!]
  set: [AuthTokenWhereUniqueInput!]
  disconnect: [AuthTokenWhereUniqueInput!]
  delete: [AuthTokenWhereUniqueInput!]
  update: [AuthTokenUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthTokenUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthTokenScalarWhereInput!]
  upsert: [AuthTokenUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthTokenUpdateManyWithWhereNestedInput {
  where: AuthTokenScalarWhereInput!
  data: AuthTokenUpdateManyDataInput!
}

input AuthTokenUpdateWithoutProfileDataInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthTokenWhereUniqueInput!
  data: AuthTokenUpdateWithoutProfileDataInput!
}

input AuthTokenUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthTokenWhereUniqueInput!
  update: AuthTokenUpdateWithoutProfileDataInput!
  create: AuthTokenCreateWithoutProfileInput!
}

input AuthTokenWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  tokenExpiry: String

  """All values that are not equal to given value."""
  tokenExpiry_not: String

  """All values that are contained in given list."""
  tokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  tokenExpiry_not_in: [String!]

  """All values less than the given value."""
  tokenExpiry_lt: String

  """All values less than or equal the given value."""
  tokenExpiry_lte: String

  """All values greater than the given value."""
  tokenExpiry_gt: String

  """All values greater than or equal the given value."""
  tokenExpiry_gte: String

  """All values containing the given string."""
  tokenExpiry_contains: String

  """All values not containing the given string."""
  tokenExpiry_not_contains: String

  """All values starting with the given string."""
  tokenExpiry_starts_with: String

  """All values not starting with the given string."""
  tokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  tokenExpiry_ends_with: String

  """All values not ending with the given string."""
  tokenExpiry_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthTokenWhereUniqueInput {
  id: ID
  token: String
  email: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Class implements Node {
  id: ID!
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: Profile!
  students(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  invites(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite!]
}

"""A connection to a list of items."""
type ClassConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClassEdge]!
  aggregate: AggregateClass!
}

input ClassCreateInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
}

input ClassCreateManyWithoutCreatorInput {
  create: [ClassCreateWithoutCreatorInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutStudentsInput {
  create: [ClassCreateWithoutStudentsInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateOneWithoutInvitesInput {
  create: ClassCreateWithoutInvitesInput
  connect: ClassWhereUniqueInput
}

input ClassCreateWithoutCreatorInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
}

input ClassCreateWithoutInvitesInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
}

input ClassCreateWithoutStudentsInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneWithoutTeacherInInput!
  invites: AuthInviteCreateManyWithoutInvitedInInput
}

"""An edge in a connection."""
type ClassEdge {
  """The item at the end of the edge."""
  node: Class!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ClassOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ClassPreviousValues {
  id: ID!
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ClassScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ClassSubscriptionPayload {
  mutation: MutationType!
  node: Class
  updatedFields: [String!]
  previousValues: ClassPreviousValues
}

input ClassSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClassWhereInput
}

input ClassUpdateInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
}

input ClassUpdateManyDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
}

input ClassUpdateManyMutationInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
}

input ClassUpdateManyWithoutCreatorInput {
  create: [ClassCreateWithoutCreatorInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ClassUpdateManyWithoutStudentsInput {
  create: [ClassCreateWithoutStudentsInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutStudentsInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutStudentsInput!]
}

input ClassUpdateManyWithWhereNestedInput {
  where: ClassScalarWhereInput!
  data: ClassUpdateManyDataInput!
}

input ClassUpdateOneRequiredWithoutInvitesInput {
  create: ClassCreateWithoutInvitesInput
  connect: ClassWhereUniqueInput
  update: ClassUpdateWithoutInvitesDataInput
  upsert: ClassUpsertWithoutInvitesInput
}

input ClassUpdateWithoutCreatorDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
}

input ClassUpdateWithoutInvitesDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
}

input ClassUpdateWithoutStudentsDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
}

input ClassUpdateWithWhereUniqueWithoutCreatorInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutCreatorDataInput!
}

input ClassUpdateWithWhereUniqueWithoutStudentsInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutStudentsDataInput!
}

input ClassUpsertWithoutInvitesInput {
  update: ClassUpdateWithoutInvitesDataInput!
  create: ClassCreateWithoutInvitesInput!
}

input ClassUpsertWithWhereUniqueWithoutCreatorInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutCreatorDataInput!
  create: ClassCreateWithoutCreatorInput!
}

input ClassUpsertWithWhereUniqueWithoutStudentsInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutStudentsDataInput!
  create: ClassCreateWithoutStudentsInput!
}

input ClassWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  students_every: ProfileWhereInput
  students_some: ProfileWhereInput
  students_none: ProfileWhereInput
  invites_every: AuthInviteWhereInput
  invites_some: AuthInviteWhereInput
  invites_none: AuthInviteWhereInput
}

input ClassWhereUniqueInput {
  id: ID
  code: String
}

type Consent implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: Profile!
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  participants(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ConsentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ConsentEdge]!
  aggregate: AggregateConsent!
}

input ConsentCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateManyWithoutAuthorInput {
  create: [ConsentCreateWithoutAuthorInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateManyWithoutCollaboratorsInput {
  create: [ConsentCreateWithoutCollaboratorsInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateManyWithoutParticipantsInput {
  create: [ConsentCreateWithoutParticipantsInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateOneWithoutStudiesInput {
  create: ConsentCreateWithoutStudiesInput
  connect: ConsentWhereUniqueInput
}

input ConsentCreateOneWithoutTasksInput {
  create: ConsentCreateWithoutTasksInput
  connect: ConsentWhereUniqueInput
}

input ConsentCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutParticipantsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutStudiesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutTasksInput {
  id: ID
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
}

"""An edge in a connection."""
type ConsentEdge {
  """The item at the end of the edge."""
  node: Consent!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ConsentOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  info_ASC
  info_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ConsentPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  info: Json
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ConsentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ConsentSubscriptionPayload {
  mutation: MutationType!
  node: Consent
  updatedFields: [String!]
  previousValues: ConsentPreviousValues
}

input ConsentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ConsentWhereInput
}

input ConsentUpdateInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateManyDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
}

input ConsentUpdateManyMutationInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
}

input ConsentUpdateManyWithoutAuthorInput {
  create: [ConsentCreateWithoutAuthorInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ConsentUpdateManyWithoutCollaboratorsInput {
  create: [ConsentCreateWithoutCollaboratorsInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input ConsentUpdateManyWithoutParticipantsInput {
  create: [ConsentCreateWithoutParticipantsInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutParticipantsInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input ConsentUpdateManyWithWhereNestedInput {
  where: ConsentScalarWhereInput!
  data: ConsentUpdateManyDataInput!
}

input ConsentUpdateOneWithoutStudiesInput {
  create: ConsentCreateWithoutStudiesInput
  connect: ConsentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConsentUpdateWithoutStudiesDataInput
  upsert: ConsentUpsertWithoutStudiesInput
}

input ConsentUpdateOneWithoutTasksInput {
  create: ConsentCreateWithoutTasksInput
  connect: ConsentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConsentUpdateWithoutTasksDataInput
  upsert: ConsentUpsertWithoutTasksInput
}

input ConsentUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutParticipantsDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutStudiesDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutTasksDataInput {
  title: String
  slug: String
  description: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
}

input ConsentUpdateWithWhereUniqueWithoutAuthorInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutAuthorDataInput!
}

input ConsentUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutCollaboratorsDataInput!
}

input ConsentUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutParticipantsDataInput!
}

input ConsentUpsertWithoutStudiesInput {
  update: ConsentUpdateWithoutStudiesDataInput!
  create: ConsentCreateWithoutStudiesInput!
}

input ConsentUpsertWithoutTasksInput {
  update: ConsentUpdateWithoutTasksDataInput!
  create: ConsentCreateWithoutTasksInput!
}

input ConsentUpsertWithWhereUniqueWithoutAuthorInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutAuthorDataInput!
  create: ConsentCreateWithoutAuthorInput!
}

input ConsentUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutCollaboratorsDataInput!
  create: ConsentCreateWithoutCollaboratorsInput!
}

input ConsentUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutParticipantsDataInput!
  create: ConsentCreateWithoutParticipantsInput!
}

input ConsentWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  participants_every: ProfileWhereInput
  participants_some: ProfileWhereInput
  participants_none: ProfileWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
}

input ConsentWhereUniqueInput {
  id: ID
  slug: String
}

type Data implements Node {
  id: ID!
  content: String
}

"""A connection to a list of items."""
type DataConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DataEdge]!
  aggregate: AggregateData!
}

input DataCreateInput {
  id: ID
  content: String
}

input DataCreateManyInput {
  create: [DataCreateInput!]
  connect: [DataWhereUniqueInput!]
}

input DataCreateOneInput {
  create: DataCreateInput
  connect: DataWhereUniqueInput
}

"""An edge in a connection."""
type DataEdge {
  """The item at the end of the edge."""
  node: Data!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DataOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
}

type DataPreviousValues {
  id: ID!
  content: String
}

input DataScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [DataScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
}

type DataSubscriptionPayload {
  mutation: MutationType!
  node: Data
  updatedFields: [String!]
  previousValues: DataPreviousValues
}

input DataSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DataSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DataWhereInput
}

input DataUpdateDataInput {
  content: String
}

input DataUpdateInput {
  content: String
}

input DataUpdateManyDataInput {
  content: String
}

input DataUpdateManyInput {
  create: [DataCreateInput!]
  connect: [DataWhereUniqueInput!]
  set: [DataWhereUniqueInput!]
  disconnect: [DataWhereUniqueInput!]
  delete: [DataWhereUniqueInput!]
  update: [DataUpdateWithWhereUniqueNestedInput!]
  updateMany: [DataUpdateManyWithWhereNestedInput!]
  deleteMany: [DataScalarWhereInput!]
  upsert: [DataUpsertWithWhereUniqueNestedInput!]
}

input DataUpdateManyMutationInput {
  content: String
}

input DataUpdateManyWithWhereNestedInput {
  where: DataScalarWhereInput!
  data: DataUpdateManyDataInput!
}

input DataUpdateOneInput {
  create: DataCreateInput
  connect: DataWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DataUpdateDataInput
  upsert: DataUpsertNestedInput
}

input DataUpdateWithWhereUniqueNestedInput {
  where: DataWhereUniqueInput!
  data: DataUpdateDataInput!
}

input DataUpsertNestedInput {
  update: DataUpdateDataInput!
  create: DataCreateInput!
}

input DataUpsertWithWhereUniqueNestedInput {
  where: DataWhereUniqueInput!
  update: DataUpdateDataInput!
  create: DataCreateInput!
}

input DataWhereInput {
  """Logical AND on all given filters."""
  AND: [DataWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
}

input DataWhereUniqueInput {
  id: ID
}

scalar DateTime

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Message implements Node {
  id: ID!
  content: String!
  info: Json
  settings: Json
  expireAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type MessageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MessageEdge]!
  aggregate: AggregateMessage!
}

input MessageCreateInput {
  id: ID
  content: String!
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageCreateManyInput {
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
}

"""An edge in a connection."""
type MessageEdge {
  """The item at the end of the edge."""
  node: Message!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MessageOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  info_ASC
  info_DESC
  settings_ASC
  settings_DESC
  expireAt_ASC
  expireAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MessagePreviousValues {
  id: ID!
  content: String!
  info: Json
  settings: Json
  expireAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input MessageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  expireAt: DateTime

  """All values that are not equal to given value."""
  expireAt_not: DateTime

  """All values that are contained in given list."""
  expireAt_in: [DateTime!]

  """All values that are not contained in given list."""
  expireAt_not_in: [DateTime!]

  """All values less than the given value."""
  expireAt_lt: DateTime

  """All values less than or equal the given value."""
  expireAt_lte: DateTime

  """All values greater than the given value."""
  expireAt_gt: DateTime

  """All values greater than or equal the given value."""
  expireAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  node: Message
  updatedFields: [String!]
  previousValues: MessagePreviousValues
}

input MessageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MessageWhereInput
}

input MessageUpdateDataInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateManyDataInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateManyInput {
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  delete: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueNestedInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
  deleteMany: [MessageScalarWhereInput!]
  upsert: [MessageUpsertWithWhereUniqueNestedInput!]
}

input MessageUpdateManyMutationInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateManyWithWhereNestedInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyDataInput!
}

input MessageUpdateWithWhereUniqueNestedInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateDataInput!
}

input MessageUpsertWithWhereUniqueNestedInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateDataInput!
  create: MessageCreateInput!
}

input MessageWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  expireAt: DateTime

  """All values that are not equal to given value."""
  expireAt_not: DateTime

  """All values that are contained in given list."""
  expireAt_in: [DateTime!]

  """All values that are not contained in given list."""
  expireAt_not_in: [DateTime!]

  """All values less than the given value."""
  expireAt_lt: DateTime

  """All values less than or equal the given value."""
  expireAt_lte: DateTime

  """All values greater than the given value."""
  expireAt_gt: DateTime

  """All values greater than or equal the given value."""
  expireAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

input MessageWhereUniqueInput {
  id: ID
}

type Mutation {
  createAuthEmail(data: AuthEmailCreateInput!): AuthEmail!
  createAuthParticipant(data: AuthParticipantCreateInput!): AuthParticipant!
  createAuthToken(data: AuthTokenCreateInput!): AuthToken!
  createAuthInvite(data: AuthInviteCreateInput!): AuthInvite!
  createSchool(data: SchoolCreateInput!): School!
  createClass(data: ClassCreateInput!): Class!
  createResult(data: ResultCreateInput!): Result!
  createConsent(data: ConsentCreateInput!): Consent!
  createStudy(data: StudyCreateInput!): Study!
  createProfile(data: ProfileCreateInput!): Profile!
  createTemplate(data: TemplateCreateInput!): Template!
  createTask(data: TaskCreateInput!): Task!
  createMessage(data: MessageCreateInput!): Message!
  createData(data: DataCreateInput!): Data!
  updateAuthEmail(data: AuthEmailUpdateInput!, where: AuthEmailWhereUniqueInput!): AuthEmail
  updateAuthParticipant(data: AuthParticipantUpdateInput!, where: AuthParticipantWhereUniqueInput!): AuthParticipant
  updateAuthToken(data: AuthTokenUpdateInput!, where: AuthTokenWhereUniqueInput!): AuthToken
  updateAuthInvite(data: AuthInviteUpdateInput!, where: AuthInviteWhereUniqueInput!): AuthInvite
  updateSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput!): School
  updateClass(data: ClassUpdateInput!, where: ClassWhereUniqueInput!): Class
  updateResult(data: ResultUpdateInput!, where: ResultWhereUniqueInput!): Result
  updateConsent(data: ConsentUpdateInput!, where: ConsentWhereUniqueInput!): Consent
  updateStudy(data: StudyUpdateInput!, where: StudyWhereUniqueInput!): Study
  updateProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile
  updateTemplate(data: TemplateUpdateInput!, where: TemplateWhereUniqueInput!): Template
  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  updateData(data: DataUpdateInput!, where: DataWhereUniqueInput!): Data
  deleteAuthEmail(where: AuthEmailWhereUniqueInput!): AuthEmail
  deleteAuthParticipant(where: AuthParticipantWhereUniqueInput!): AuthParticipant
  deleteAuthToken(where: AuthTokenWhereUniqueInput!): AuthToken
  deleteAuthInvite(where: AuthInviteWhereUniqueInput!): AuthInvite
  deleteSchool(where: SchoolWhereUniqueInput!): School
  deleteClass(where: ClassWhereUniqueInput!): Class
  deleteResult(where: ResultWhereUniqueInput!): Result
  deleteConsent(where: ConsentWhereUniqueInput!): Consent
  deleteStudy(where: StudyWhereUniqueInput!): Study
  deleteProfile(where: ProfileWhereUniqueInput!): Profile
  deleteTemplate(where: TemplateWhereUniqueInput!): Template
  deleteTask(where: TaskWhereUniqueInput!): Task
  deleteMessage(where: MessageWhereUniqueInput!): Message
  deleteData(where: DataWhereUniqueInput!): Data
  upsertAuthEmail(where: AuthEmailWhereUniqueInput!, create: AuthEmailCreateInput!, update: AuthEmailUpdateInput!): AuthEmail!
  upsertAuthParticipant(where: AuthParticipantWhereUniqueInput!, create: AuthParticipantCreateInput!, update: AuthParticipantUpdateInput!): AuthParticipant!
  upsertAuthToken(where: AuthTokenWhereUniqueInput!, create: AuthTokenCreateInput!, update: AuthTokenUpdateInput!): AuthToken!
  upsertAuthInvite(where: AuthInviteWhereUniqueInput!, create: AuthInviteCreateInput!, update: AuthInviteUpdateInput!): AuthInvite!
  upsertSchool(where: SchoolWhereUniqueInput!, create: SchoolCreateInput!, update: SchoolUpdateInput!): School!
  upsertClass(where: ClassWhereUniqueInput!, create: ClassCreateInput!, update: ClassUpdateInput!): Class!
  upsertResult(where: ResultWhereUniqueInput!, create: ResultCreateInput!, update: ResultUpdateInput!): Result!
  upsertConsent(where: ConsentWhereUniqueInput!, create: ConsentCreateInput!, update: ConsentUpdateInput!): Consent!
  upsertStudy(where: StudyWhereUniqueInput!, create: StudyCreateInput!, update: StudyUpdateInput!): Study!
  upsertProfile(where: ProfileWhereUniqueInput!, create: ProfileCreateInput!, update: ProfileUpdateInput!): Profile!
  upsertTemplate(where: TemplateWhereUniqueInput!, create: TemplateCreateInput!, update: TemplateUpdateInput!): Template!
  upsertTask(where: TaskWhereUniqueInput!, create: TaskCreateInput!, update: TaskUpdateInput!): Task!
  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!
  upsertData(where: DataWhereUniqueInput!, create: DataCreateInput!, update: DataUpdateInput!): Data!
  updateManyAuthEmails(data: AuthEmailUpdateManyMutationInput!, where: AuthEmailWhereInput): BatchPayload!
  updateManyAuthParticipants(data: AuthParticipantUpdateManyMutationInput!, where: AuthParticipantWhereInput): BatchPayload!
  updateManyAuthTokens(data: AuthTokenUpdateManyMutationInput!, where: AuthTokenWhereInput): BatchPayload!
  updateManySchools(data: SchoolUpdateManyMutationInput!, where: SchoolWhereInput): BatchPayload!
  updateManyClasses(data: ClassUpdateManyMutationInput!, where: ClassWhereInput): BatchPayload!
  updateManyResults(data: ResultUpdateManyMutationInput!, where: ResultWhereInput): BatchPayload!
  updateManyConsents(data: ConsentUpdateManyMutationInput!, where: ConsentWhereInput): BatchPayload!
  updateManyStudies(data: StudyUpdateManyMutationInput!, where: StudyWhereInput): BatchPayload!
  updateManyProfiles(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!
  updateManyTemplates(data: TemplateUpdateManyMutationInput!, where: TemplateWhereInput): BatchPayload!
  updateManyTasks(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): BatchPayload!
  updateManyMessages(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  updateManyDatas(data: DataUpdateManyMutationInput!, where: DataWhereInput): BatchPayload!
  deleteManyAuthEmails(where: AuthEmailWhereInput): BatchPayload!
  deleteManyAuthParticipants(where: AuthParticipantWhereInput): BatchPayload!
  deleteManyAuthTokens(where: AuthTokenWhereInput): BatchPayload!
  deleteManyAuthInvites(where: AuthInviteWhereInput): BatchPayload!
  deleteManySchools(where: SchoolWhereInput): BatchPayload!
  deleteManyClasses(where: ClassWhereInput): BatchPayload!
  deleteManyResults(where: ResultWhereInput): BatchPayload!
  deleteManyConsents(where: ConsentWhereInput): BatchPayload!
  deleteManyStudies(where: StudyWhereInput): BatchPayload!
  deleteManyProfiles(where: ProfileWhereInput): BatchPayload!
  deleteManyTemplates(where: TemplateWhereInput): BatchPayload!
  deleteManyTasks(where: TaskWhereInput): BatchPayload!
  deleteManyMessages(where: MessageWhereInput): BatchPayload!
  deleteManyDatas(where: DataWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  IT
  ADMIN
  SCIENTIST
  MENTOR
  TEACHER
  STUDENT
  PARTICIPANT
}

type Profile implements Node {
  id: ID!
  username: String!
  permissions: [Permission!]!
  authEmail(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthEmail!]
  authToken(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthToken!]
  authInvite(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite!]
  authParticipant(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthParticipant!]
  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result!]
  teacherIn(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  studentIn(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  participantIn(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  researcherIn(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  taskCreatorIn(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  consentCreatorIn(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  collaboratorInStudy(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  collaboratorInTask(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  collaboratorInConsent(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  consentGivenFor(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
}

"""A connection to a list of items."""
type ProfileConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProfileEdge]!
  aggregate: AggregateProfile!
}

input ProfileCreateInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateManyWithoutCollaboratorInConsentInput {
  create: [ProfileCreateWithoutCollaboratorInConsentInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorInStudyInput {
  create: [ProfileCreateWithoutCollaboratorInStudyInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorInTaskInput {
  create: [ProfileCreateWithoutCollaboratorInTaskInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutConsentGivenForInput {
  create: [ProfileCreateWithoutConsentGivenForInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutParticipantInInput {
  create: [ProfileCreateWithoutParticipantInInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutStudentInInput {
  create: [ProfileCreateWithoutStudentInInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateOneInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthEmailInput {
  create: ProfileCreateWithoutAuthEmailInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthInviteInput {
  create: ProfileCreateWithoutAuthInviteInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthParticipantInput {
  create: ProfileCreateWithoutAuthParticipantInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthTokenInput {
  create: ProfileCreateWithoutAuthTokenInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutConsentCreatorInInput {
  create: ProfileCreateWithoutConsentCreatorInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutResearcherInInput {
  create: ProfileCreateWithoutResearcherInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutResultsInput {
  create: ProfileCreateWithoutResultsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutTaskCreatorInInput {
  create: ProfileCreateWithoutTaskCreatorInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutTeacherInInput {
  create: ProfileCreateWithoutTeacherInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreatepermissionsInput {
  set: [Permission!]
}

input ProfileCreateWithoutAuthEmailInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutAuthInviteInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutAuthParticipantInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutAuthTokenInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutCollaboratorInConsentInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutCollaboratorInStudyInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutCollaboratorInTaskInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutConsentCreatorInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutConsentGivenForInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
}

input ProfileCreateWithoutParticipantInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutResearcherInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutResultsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutStudentInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutTaskCreatorInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

input ProfileCreateWithoutTeacherInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
}

"""An edge in a connection."""
type ProfileEdge {
  """The item at the end of the edge."""
  node: Profile!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProfileOrderByInput {
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  info_ASC
  info_DESC
  generalInfo_ASC
  generalInfo_DESC
  tasksInfo_ASC
  tasksInfo_DESC
  studiesInfo_ASC
  studiesInfo_DESC
  consentsInfo_ASC
  consentsInfo_DESC
}

type ProfilePreviousValues {
  id: ID!
  username: String!
  permissions: [Permission!]!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
}

input ProfileScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
}

type ProfileSubscriptionPayload {
  mutation: MutationType!
  node: Profile
  updatedFields: [String!]
  previousValues: ProfilePreviousValues
}

input ProfileSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProfileWhereInput
}

input ProfileUpdateDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateManyDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
}

input ProfileUpdateManyMutationInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
}

input ProfileUpdateManyWithoutCollaboratorInConsentInput {
  create: [ProfileCreateWithoutCollaboratorInConsentInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInConsentInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInConsentInput!]
}

input ProfileUpdateManyWithoutCollaboratorInStudyInput {
  create: [ProfileCreateWithoutCollaboratorInStudyInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInStudyInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInStudyInput!]
}

input ProfileUpdateManyWithoutCollaboratorInTaskInput {
  create: [ProfileCreateWithoutCollaboratorInTaskInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInTaskInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInTaskInput!]
}

input ProfileUpdateManyWithoutConsentGivenForInput {
  create: [ProfileCreateWithoutConsentGivenForInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutConsentGivenForInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutConsentGivenForInput!]
}

input ProfileUpdateManyWithoutParticipantInInput {
  create: [ProfileCreateWithoutParticipantInInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutParticipantInInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutParticipantInInput!]
}

input ProfileUpdateManyWithoutStudentInInput {
  create: [ProfileCreateWithoutStudentInInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutStudentInInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutStudentInInput!]
}

input ProfileUpdateManyWithWhereNestedInput {
  where: ProfileScalarWhereInput!
  data: ProfileUpdateManyDataInput!
}

input ProfileUpdateOneRequiredInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateDataInput
  upsert: ProfileUpsertNestedInput
}

input ProfileUpdateOneRequiredWithoutAuthEmailInput {
  create: ProfileCreateWithoutAuthEmailInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthEmailDataInput
  upsert: ProfileUpsertWithoutAuthEmailInput
}

input ProfileUpdateOneRequiredWithoutAuthInviteInput {
  create: ProfileCreateWithoutAuthInviteInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthInviteDataInput
  upsert: ProfileUpsertWithoutAuthInviteInput
}

input ProfileUpdateOneRequiredWithoutAuthParticipantInput {
  create: ProfileCreateWithoutAuthParticipantInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthParticipantDataInput
  upsert: ProfileUpsertWithoutAuthParticipantInput
}

input ProfileUpdateOneRequiredWithoutAuthTokenInput {
  create: ProfileCreateWithoutAuthTokenInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthTokenDataInput
  upsert: ProfileUpsertWithoutAuthTokenInput
}

input ProfileUpdateOneRequiredWithoutConsentCreatorInInput {
  create: ProfileCreateWithoutConsentCreatorInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutConsentCreatorInDataInput
  upsert: ProfileUpsertWithoutConsentCreatorInInput
}

input ProfileUpdateOneRequiredWithoutResearcherInInput {
  create: ProfileCreateWithoutResearcherInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutResearcherInDataInput
  upsert: ProfileUpsertWithoutResearcherInInput
}

input ProfileUpdateOneRequiredWithoutResultsInput {
  create: ProfileCreateWithoutResultsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutResultsDataInput
  upsert: ProfileUpsertWithoutResultsInput
}

input ProfileUpdateOneRequiredWithoutTaskCreatorInInput {
  create: ProfileCreateWithoutTaskCreatorInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutTaskCreatorInDataInput
  upsert: ProfileUpsertWithoutTaskCreatorInInput
}

input ProfileUpdateOneRequiredWithoutTeacherInInput {
  create: ProfileCreateWithoutTeacherInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutTeacherInDataInput
  upsert: ProfileUpsertWithoutTeacherInInput
}

input ProfileUpdatepermissionsInput {
  set: [Permission!]
}

input ProfileUpdateWithoutAuthEmailDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutAuthInviteDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutAuthParticipantDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutAuthTokenDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutCollaboratorInConsentDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutCollaboratorInStudyDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutCollaboratorInTaskDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutConsentCreatorInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutConsentGivenForDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
}

input ProfileUpdateWithoutParticipantInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutResearcherInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutResultsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutStudentInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutTaskCreatorInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithoutTeacherInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInConsentInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInConsentDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInStudyInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInStudyDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInTaskInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInTaskDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutConsentGivenForInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutConsentGivenForDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutParticipantInInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutParticipantInDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutStudentInInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutStudentInDataInput!
}

input ProfileUpsertNestedInput {
  update: ProfileUpdateDataInput!
  create: ProfileCreateInput!
}

input ProfileUpsertWithoutAuthEmailInput {
  update: ProfileUpdateWithoutAuthEmailDataInput!
  create: ProfileCreateWithoutAuthEmailInput!
}

input ProfileUpsertWithoutAuthInviteInput {
  update: ProfileUpdateWithoutAuthInviteDataInput!
  create: ProfileCreateWithoutAuthInviteInput!
}

input ProfileUpsertWithoutAuthParticipantInput {
  update: ProfileUpdateWithoutAuthParticipantDataInput!
  create: ProfileCreateWithoutAuthParticipantInput!
}

input ProfileUpsertWithoutAuthTokenInput {
  update: ProfileUpdateWithoutAuthTokenDataInput!
  create: ProfileCreateWithoutAuthTokenInput!
}

input ProfileUpsertWithoutConsentCreatorInInput {
  update: ProfileUpdateWithoutConsentCreatorInDataInput!
  create: ProfileCreateWithoutConsentCreatorInInput!
}

input ProfileUpsertWithoutResearcherInInput {
  update: ProfileUpdateWithoutResearcherInDataInput!
  create: ProfileCreateWithoutResearcherInInput!
}

input ProfileUpsertWithoutResultsInput {
  update: ProfileUpdateWithoutResultsDataInput!
  create: ProfileCreateWithoutResultsInput!
}

input ProfileUpsertWithoutTaskCreatorInInput {
  update: ProfileUpdateWithoutTaskCreatorInDataInput!
  create: ProfileCreateWithoutTaskCreatorInInput!
}

input ProfileUpsertWithoutTeacherInInput {
  update: ProfileUpdateWithoutTeacherInDataInput!
  create: ProfileCreateWithoutTeacherInInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInConsentInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInConsentDataInput!
  create: ProfileCreateWithoutCollaboratorInConsentInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInStudyInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInStudyDataInput!
  create: ProfileCreateWithoutCollaboratorInStudyInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInTaskInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInTaskDataInput!
  create: ProfileCreateWithoutCollaboratorInTaskInput!
}

input ProfileUpsertWithWhereUniqueWithoutConsentGivenForInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutConsentGivenForDataInput!
  create: ProfileCreateWithoutConsentGivenForInput!
}

input ProfileUpsertWithWhereUniqueWithoutParticipantInInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutParticipantInDataInput!
  create: ProfileCreateWithoutParticipantInInput!
}

input ProfileUpsertWithWhereUniqueWithoutStudentInInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutStudentInDataInput!
  create: ProfileCreateWithoutStudentInInput!
}

input ProfileWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  authEmail_every: AuthEmailWhereInput
  authEmail_some: AuthEmailWhereInput
  authEmail_none: AuthEmailWhereInput
  authToken_every: AuthTokenWhereInput
  authToken_some: AuthTokenWhereInput
  authToken_none: AuthTokenWhereInput
  authInvite_every: AuthInviteWhereInput
  authInvite_some: AuthInviteWhereInput
  authInvite_none: AuthInviteWhereInput
  authParticipant_every: AuthParticipantWhereInput
  authParticipant_some: AuthParticipantWhereInput
  authParticipant_none: AuthParticipantWhereInput
  results_every: ResultWhereInput
  results_some: ResultWhereInput
  results_none: ResultWhereInput
  teacherIn_every: ClassWhereInput
  teacherIn_some: ClassWhereInput
  teacherIn_none: ClassWhereInput
  studentIn_every: ClassWhereInput
  studentIn_some: ClassWhereInput
  studentIn_none: ClassWhereInput
  participantIn_every: StudyWhereInput
  participantIn_some: StudyWhereInput
  participantIn_none: StudyWhereInput
  researcherIn_every: StudyWhereInput
  researcherIn_some: StudyWhereInput
  researcherIn_none: StudyWhereInput
  taskCreatorIn_every: TaskWhereInput
  taskCreatorIn_some: TaskWhereInput
  taskCreatorIn_none: TaskWhereInput
  consentCreatorIn_every: ConsentWhereInput
  consentCreatorIn_some: ConsentWhereInput
  consentCreatorIn_none: ConsentWhereInput
  collaboratorInStudy_every: StudyWhereInput
  collaboratorInStudy_some: StudyWhereInput
  collaboratorInStudy_none: StudyWhereInput
  collaboratorInTask_every: TaskWhereInput
  collaboratorInTask_some: TaskWhereInput
  collaboratorInTask_none: TaskWhereInput
  collaboratorInConsent_every: ConsentWhereInput
  collaboratorInConsent_some: ConsentWhereInput
  collaboratorInConsent_none: ConsentWhereInput
  consentGivenFor_every: ConsentWhereInput
  consentGivenFor_some: ConsentWhereInput
  consentGivenFor_none: ConsentWhereInput
}

input ProfileWhereUniqueInput {
  id: ID
  username: String
}

type Query {
  authEmails(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthEmail]!
  authParticipants(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthParticipant]!
  authTokens(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthToken]!
  authInvites(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite]!
  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School]!
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class]!
  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result]!
  consents(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent]!
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study]!
  profiles(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile]!
  templates(where: TemplateWhereInput, orderBy: TemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Template]!
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task]!
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!
  datas(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Data]!
  authEmail(where: AuthEmailWhereUniqueInput!): AuthEmail
  authParticipant(where: AuthParticipantWhereUniqueInput!): AuthParticipant
  authToken(where: AuthTokenWhereUniqueInput!): AuthToken
  authInvite(where: AuthInviteWhereUniqueInput!): AuthInvite
  school(where: SchoolWhereUniqueInput!): School
  class(where: ClassWhereUniqueInput!): Class
  result(where: ResultWhereUniqueInput!): Result
  consent(where: ConsentWhereUniqueInput!): Consent
  study(where: StudyWhereUniqueInput!): Study
  profile(where: ProfileWhereUniqueInput!): Profile
  template(where: TemplateWhereUniqueInput!): Template
  task(where: TaskWhereUniqueInput!): Task
  message(where: MessageWhereUniqueInput!): Message
  data(where: DataWhereUniqueInput!): Data
  authEmailsConnection(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthEmailConnection!
  authParticipantsConnection(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthParticipantConnection!
  authTokensConnection(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthTokenConnection!
  authInvitesConnection(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthInviteConnection!
  schoolsConnection(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SchoolConnection!
  classesConnection(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClassConnection!
  resultsConnection(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResultConnection!
  consentsConnection(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConsentConnection!
  studiesConnection(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StudyConnection!
  profilesConnection(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProfileConnection!
  templatesConnection(where: TemplateWhereInput, orderBy: TemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TemplateConnection!
  tasksConnection(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskConnection!
  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!
  datasConnection(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DataConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Result implements Node {
  id: ID!
  template: Template
  task: Task!
  user: Profile!
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  payload: String
  study: Study
  info: Json
  incrementalData(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Data!]
  fullData: Data
}

"""A connection to a list of items."""
type ResultConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ResultEdge]!
  aggregate: AggregateResult!
}

input ResultCreateInput {
  id: ID
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  user: ProfileCreateOneWithoutResultsInput!
  study: StudyCreateOneInput
  incrementalData: DataCreateManyInput
  fullData: DataCreateOneInput
}

input ResultCreateManyWithoutUserInput {
  create: [ResultCreateWithoutUserInput!]
  connect: [ResultWhereUniqueInput!]
}

input ResultCreateWithoutUserInput {
  id: ID
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  study: StudyCreateOneInput
  incrementalData: DataCreateManyInput
  fullData: DataCreateOneInput
}

"""An edge in a connection."""
type ResultEdge {
  """The item at the end of the edge."""
  node: Result!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ResultOrderByInput {
  id_ASC
  id_DESC
  quantity_ASC
  quantity_DESC
  data_ASC
  data_DESC
  dataPolicy_ASC
  dataPolicy_DESC
  token_ASC
  token_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  payload_ASC
  payload_DESC
  info_ASC
  info_DESC
}

type ResultPreviousValues {
  id: ID!
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  payload: String
  info: Json
}

input ResultScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
  dataPolicy: String

  """All values that are not equal to given value."""
  dataPolicy_not: String

  """All values that are contained in given list."""
  dataPolicy_in: [String!]

  """All values that are not contained in given list."""
  dataPolicy_not_in: [String!]

  """All values less than the given value."""
  dataPolicy_lt: String

  """All values less than or equal the given value."""
  dataPolicy_lte: String

  """All values greater than the given value."""
  dataPolicy_gt: String

  """All values greater than or equal the given value."""
  dataPolicy_gte: String

  """All values containing the given string."""
  dataPolicy_contains: String

  """All values not containing the given string."""
  dataPolicy_not_contains: String

  """All values starting with the given string."""
  dataPolicy_starts_with: String

  """All values not starting with the given string."""
  dataPolicy_not_starts_with: String

  """All values ending with the given string."""
  dataPolicy_ends_with: String

  """All values not ending with the given string."""
  dataPolicy_not_ends_with: String
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payload: String

  """All values that are not equal to given value."""
  payload_not: String

  """All values that are contained in given list."""
  payload_in: [String!]

  """All values that are not contained in given list."""
  payload_not_in: [String!]

  """All values less than the given value."""
  payload_lt: String

  """All values less than or equal the given value."""
  payload_lte: String

  """All values greater than the given value."""
  payload_gt: String

  """All values greater than or equal the given value."""
  payload_gte: String

  """All values containing the given string."""
  payload_contains: String

  """All values not containing the given string."""
  payload_not_contains: String

  """All values starting with the given string."""
  payload_starts_with: String

  """All values not starting with the given string."""
  payload_not_starts_with: String

  """All values ending with the given string."""
  payload_ends_with: String

  """All values not ending with the given string."""
  payload_not_ends_with: String
}

type ResultSubscriptionPayload {
  mutation: MutationType!
  node: Result
  updatedFields: [String!]
  previousValues: ResultPreviousValues
}

input ResultSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ResultWhereInput
}

input ResultUpdateInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  user: ProfileUpdateOneRequiredWithoutResultsInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateManyDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
}

input ResultUpdateManyMutationInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
}

input ResultUpdateManyWithoutUserInput {
  create: [ResultCreateWithoutUserInput!]
  connect: [ResultWhereUniqueInput!]
  set: [ResultWhereUniqueInput!]
  disconnect: [ResultWhereUniqueInput!]
  delete: [ResultWhereUniqueInput!]
  update: [ResultUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ResultUpdateManyWithWhereNestedInput!]
  deleteMany: [ResultScalarWhereInput!]
  upsert: [ResultUpsertWithWhereUniqueWithoutUserInput!]
}

input ResultUpdateManyWithWhereNestedInput {
  where: ResultScalarWhereInput!
  data: ResultUpdateManyDataInput!
}

input ResultUpdateWithoutUserDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateWithWhereUniqueWithoutUserInput {
  where: ResultWhereUniqueInput!
  data: ResultUpdateWithoutUserDataInput!
}

input ResultUpsertWithWhereUniqueWithoutUserInput {
  where: ResultWhereUniqueInput!
  update: ResultUpdateWithoutUserDataInput!
  create: ResultCreateWithoutUserInput!
}

input ResultWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
  dataPolicy: String

  """All values that are not equal to given value."""
  dataPolicy_not: String

  """All values that are contained in given list."""
  dataPolicy_in: [String!]

  """All values that are not contained in given list."""
  dataPolicy_not_in: [String!]

  """All values less than the given value."""
  dataPolicy_lt: String

  """All values less than or equal the given value."""
  dataPolicy_lte: String

  """All values greater than the given value."""
  dataPolicy_gt: String

  """All values greater than or equal the given value."""
  dataPolicy_gte: String

  """All values containing the given string."""
  dataPolicy_contains: String

  """All values not containing the given string."""
  dataPolicy_not_contains: String

  """All values starting with the given string."""
  dataPolicy_starts_with: String

  """All values not starting with the given string."""
  dataPolicy_not_starts_with: String

  """All values ending with the given string."""
  dataPolicy_ends_with: String

  """All values not ending with the given string."""
  dataPolicy_not_ends_with: String
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payload: String

  """All values that are not equal to given value."""
  payload_not: String

  """All values that are contained in given list."""
  payload_in: [String!]

  """All values that are not contained in given list."""
  payload_not_in: [String!]

  """All values less than the given value."""
  payload_lt: String

  """All values less than or equal the given value."""
  payload_lte: String

  """All values greater than the given value."""
  payload_gt: String

  """All values greater than or equal the given value."""
  payload_gte: String

  """All values containing the given string."""
  payload_contains: String

  """All values not containing the given string."""
  payload_not_contains: String

  """All values starting with the given string."""
  payload_starts_with: String

  """All values not starting with the given string."""
  payload_not_starts_with: String

  """All values ending with the given string."""
  payload_ends_with: String

  """All values not ending with the given string."""
  payload_not_ends_with: String
  template: TemplateWhereInput
  task: TaskWhereInput
  user: ProfileWhereInput
  study: StudyWhereInput
  incrementalData_every: DataWhereInput
  incrementalData_some: DataWhereInput
  incrementalData_none: DataWhereInput
  fullData: DataWhereInput
}

input ResultWhereUniqueInput {
  id: ID
  token: String
}

type School implements Node {
  id: ID!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: Profile!
}

"""A connection to a list of items."""
type SchoolConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SchoolEdge]!
  aggregate: AggregateSchool!
}

input SchoolCreateInput {
  id: ID
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneInput!
}

"""An edge in a connection."""
type SchoolEdge {
  """The item at the end of the edge."""
  node: School!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SchoolOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SchoolPreviousValues {
  id: ID!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SchoolSubscriptionPayload {
  mutation: MutationType!
  node: School
  updatedFields: [String!]
  previousValues: SchoolPreviousValues
}

input SchoolSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SchoolSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SchoolSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SchoolSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SchoolWhereInput
}

input SchoolUpdateInput {
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredInput
}

input SchoolUpdateManyMutationInput {
  title: String
  description: String
  image: String
  largeImage: String
}

input SchoolWhereInput {
  """Logical AND on all given filters."""
  AND: [SchoolWhereInput!]

  """Logical OR on all given filters."""
  OR: [SchoolWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SchoolWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
}

input SchoolWhereUniqueInput {
  id: ID
}

type Study implements Node {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  author: Profile!
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  settings: Json
  participants(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  createdAt: DateTime!
  updatedAt: DateTime!
  image: String
  largeImage: String
  info: Json
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  consent: Consent
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
}

"""A connection to a list of items."""
type StudyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StudyEdge]!
  aggregate: AggregateStudy!
}

input StudyCreateInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateOneWithoutStudiesInput
  messages: MessageCreateManyInput
}

input StudyCreateManyWithoutAuthorInput {
  create: [StudyCreateWithoutAuthorInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutCollaboratorsInput {
  create: [StudyCreateWithoutCollaboratorsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutConsentInput {
  create: [StudyCreateWithoutConsentInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutParticipantsInput {
  create: [StudyCreateWithoutParticipantsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateOneInput {
  create: StudyCreateInput
  connect: StudyWhereUniqueInput
}

input StudyCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateOneWithoutStudiesInput
  messages: MessageCreateManyInput
}

input StudyCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  consent: ConsentCreateOneWithoutStudiesInput
  messages: MessageCreateManyInput
}

input StudyCreateWithoutConsentInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  messages: MessageCreateManyInput
}

input StudyCreateWithoutParticipantsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateOneWithoutStudiesInput
  messages: MessageCreateManyInput
}

"""An edge in a connection."""
type StudyEdge {
  """The item at the end of the edge."""
  node: Study!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StudyOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  info_ASC
  info_DESC
}

type StudyPreviousValues {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  image: String
  largeImage: String
  info: Json
}

input StudyScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [StudyScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudyScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudyScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
}

type StudySubscriptionPayload {
  mutation: MutationType!
  node: Study
  updatedFields: [String!]
  previousValues: StudyPreviousValues
}

input StudySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StudySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StudyWhereInput
}

input StudyUpdateDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateOneWithoutStudiesInput
  messages: MessageUpdateManyInput
}

input StudyUpdateInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateOneWithoutStudiesInput
  messages: MessageUpdateManyInput
}

input StudyUpdateManyDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
}

input StudyUpdateManyMutationInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
}

input StudyUpdateManyWithoutAuthorInput {
  create: [StudyCreateWithoutAuthorInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutAuthorInput!]
}

input StudyUpdateManyWithoutCollaboratorsInput {
  create: [StudyCreateWithoutCollaboratorsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input StudyUpdateManyWithoutConsentInput {
  create: [StudyCreateWithoutConsentInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutConsentInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutConsentInput!]
}

input StudyUpdateManyWithoutParticipantsInput {
  create: [StudyCreateWithoutParticipantsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutParticipantsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input StudyUpdateManyWithWhereNestedInput {
  where: StudyScalarWhereInput!
  data: StudyUpdateManyDataInput!
}

input StudyUpdateOneInput {
  create: StudyCreateInput
  connect: StudyWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StudyUpdateDataInput
  upsert: StudyUpsertNestedInput
}

input StudyUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateOneWithoutStudiesInput
  messages: MessageUpdateManyInput
}

input StudyUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  consent: ConsentUpdateOneWithoutStudiesInput
  messages: MessageUpdateManyInput
}

input StudyUpdateWithoutConsentDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  messages: MessageUpdateManyInput
}

input StudyUpdateWithoutParticipantsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateOneWithoutStudiesInput
  messages: MessageUpdateManyInput
}

input StudyUpdateWithWhereUniqueWithoutAuthorInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutAuthorDataInput!
}

input StudyUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutCollaboratorsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutConsentInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutConsentDataInput!
}

input StudyUpdateWithWhereUniqueWithoutParticipantsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutParticipantsDataInput!
}

input StudyUpsertNestedInput {
  update: StudyUpdateDataInput!
  create: StudyCreateInput!
}

input StudyUpsertWithWhereUniqueWithoutAuthorInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutAuthorDataInput!
  create: StudyCreateWithoutAuthorInput!
}

input StudyUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutCollaboratorsDataInput!
  create: StudyCreateWithoutCollaboratorsInput!
}

input StudyUpsertWithWhereUniqueWithoutConsentInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutConsentDataInput!
  create: StudyCreateWithoutConsentInput!
}

input StudyUpsertWithWhereUniqueWithoutParticipantsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutParticipantsDataInput!
  create: StudyCreateWithoutParticipantsInput!
}

input StudyWhereInput {
  """Logical AND on all given filters."""
  AND: [StudyWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudyWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudyWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  author: ProfileWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
  participants_every: ProfileWhereInput
  participants_some: ProfileWhereInput
  participants_none: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  consent: ConsentWhereInput
  messages_every: MessageWhereInput
  messages_some: MessageWhereInput
  messages_none: MessageWhereInput
}

input StudyWhereUniqueInput {
  id: ID
  slug: String
}

type Subscription {
  authEmail(where: AuthEmailSubscriptionWhereInput): AuthEmailSubscriptionPayload
  authParticipant(where: AuthParticipantSubscriptionWhereInput): AuthParticipantSubscriptionPayload
  authToken(where: AuthTokenSubscriptionWhereInput): AuthTokenSubscriptionPayload
  authInvite(where: AuthInviteSubscriptionWhereInput): AuthInviteSubscriptionPayload
  school(where: SchoolSubscriptionWhereInput): SchoolSubscriptionPayload
  class(where: ClassSubscriptionWhereInput): ClassSubscriptionPayload
  result(where: ResultSubscriptionWhereInput): ResultSubscriptionPayload
  consent(where: ConsentSubscriptionWhereInput): ConsentSubscriptionPayload
  study(where: StudySubscriptionWhereInput): StudySubscriptionPayload
  profile(where: ProfileSubscriptionWhereInput): ProfileSubscriptionPayload
  template(where: TemplateSubscriptionWhereInput): TemplateSubscriptionPayload
  task(where: TaskSubscriptionWhereInput): TaskSubscriptionPayload
  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload
  data(where: DataSubscriptionWhereInput): DataSubscriptionPayload
}

type Task implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  template: Template
  author: Profile!
  parameters: Json
  settings: Json
  link: String
  createdAt: DateTime!
  updatedAt: DateTime!
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  consent: Consent
}

"""A connection to a list of items."""
type TaskConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TaskEdge]!
  aggregate: AggregateTask!
}

input TaskCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
}

input TaskCreateManyInput {
  create: [TaskCreateInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutAuthorInput {
  create: [TaskCreateWithoutAuthorInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutCollaboratorsInput {
  create: [TaskCreateWithoutCollaboratorsInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutConsentInput {
  create: [TaskCreateWithoutConsentInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutTemplateInput {
  create: [TaskCreateWithoutTemplateInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateOneInput {
  create: TaskCreateInput
  connect: TaskWhereUniqueInput
}

input TaskCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateCreateOneWithoutTasksInput
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
}

input TaskCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  consent: ConsentCreateOneWithoutTasksInput
}

input TaskCreateWithoutConsentInput {
  id: ID
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
}

input TaskCreateWithoutTemplateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
}

"""An edge in a connection."""
type TaskEdge {
  """The item at the end of the edge."""
  node: Task!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TaskOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  parameters_ASC
  parameters_DESC
  settings_ASC
  settings_DESC
  link_ASC
  link_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TaskPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  parameters: Json
  settings: Json
  link: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TaskScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type TaskSubscriptionPayload {
  mutation: MutationType!
  node: Task
  updatedFields: [String!]
  previousValues: TaskPreviousValues
}

input TaskSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TaskWhereInput
}

input TaskUpdateDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateManyDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
}

input TaskUpdateManyInput {
  create: [TaskCreateInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueNestedInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueNestedInput!]
}

input TaskUpdateManyMutationInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
}

input TaskUpdateManyWithoutAuthorInput {
  create: [TaskCreateWithoutAuthorInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutAuthorInput!]
}

input TaskUpdateManyWithoutCollaboratorsInput {
  create: [TaskCreateWithoutCollaboratorsInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input TaskUpdateManyWithoutConsentInput {
  create: [TaskCreateWithoutConsentInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutConsentInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutConsentInput!]
}

input TaskUpdateManyWithoutTemplateInput {
  create: [TaskCreateWithoutTemplateInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutTemplateInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutTemplateInput!]
}

input TaskUpdateManyWithWhereNestedInput {
  where: TaskScalarWhereInput!
  data: TaskUpdateManyDataInput!
}

input TaskUpdateOneRequiredInput {
  create: TaskCreateInput
  connect: TaskWhereUniqueInput
  update: TaskUpdateDataInput
  upsert: TaskUpsertNestedInput
}

input TaskUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateUpdateOneWithoutTasksInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateWithoutConsentDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
}

input TaskUpdateWithoutTemplateDataInput {
  title: String
  slug: String
  description: String
  parameters: Json
  settings: Json
  link: String
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateWithWhereUniqueNestedInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateDataInput!
}

input TaskUpdateWithWhereUniqueWithoutAuthorInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutAuthorDataInput!
}

input TaskUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutCollaboratorsDataInput!
}

input TaskUpdateWithWhereUniqueWithoutConsentInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutConsentDataInput!
}

input TaskUpdateWithWhereUniqueWithoutTemplateInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutTemplateDataInput!
}

input TaskUpsertNestedInput {
  update: TaskUpdateDataInput!
  create: TaskCreateInput!
}

input TaskUpsertWithWhereUniqueNestedInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateDataInput!
  create: TaskCreateInput!
}

input TaskUpsertWithWhereUniqueWithoutAuthorInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutAuthorDataInput!
  create: TaskCreateWithoutAuthorInput!
}

input TaskUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutCollaboratorsDataInput!
  create: TaskCreateWithoutCollaboratorsInput!
}

input TaskUpsertWithWhereUniqueWithoutConsentInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutConsentDataInput!
  create: TaskCreateWithoutConsentInput!
}

input TaskUpsertWithWhereUniqueWithoutTemplateInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutTemplateDataInput!
  create: TaskCreateWithoutTemplateInput!
}

input TaskWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  template: TemplateWhereInput
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  consent: ConsentWhereInput
}

input TaskWhereUniqueInput {
  id: ID
  slug: String
}

type Template implements Node {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  author: Profile!
  parameters: Json
  script: String
  style: String
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type TemplateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TemplateEdge]!
  aggregate: AggregateTemplate!
}

input TemplateCreateInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  author: ProfileCreateOneInput!
  tasks: TaskCreateManyWithoutTemplateInput
}

input TemplateCreateOneInput {
  create: TemplateCreateInput
  connect: TemplateWhereUniqueInput
}

input TemplateCreateOneWithoutTasksInput {
  create: TemplateCreateWithoutTasksInput
  connect: TemplateWhereUniqueInput
}

input TemplateCreateWithoutTasksInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  author: ProfileCreateOneInput!
}

"""An edge in a connection."""
type TemplateEdge {
  """The item at the end of the edge."""
  node: Template!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TemplateOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  parameters_ASC
  parameters_DESC
  script_ASC
  script_DESC
  style_ASC
  style_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TemplatePreviousValues {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TemplateSubscriptionPayload {
  mutation: MutationType!
  node: Template
  updatedFields: [String!]
  previousValues: TemplatePreviousValues
}

input TemplateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TemplateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TemplateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TemplateSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TemplateWhereInput
}

input TemplateUpdateDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  author: ProfileUpdateOneRequiredInput
  tasks: TaskUpdateManyWithoutTemplateInput
}

input TemplateUpdateInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  author: ProfileUpdateOneRequiredInput
  tasks: TaskUpdateManyWithoutTemplateInput
}

input TemplateUpdateManyMutationInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
}

input TemplateUpdateOneInput {
  create: TemplateCreateInput
  connect: TemplateWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TemplateUpdateDataInput
  upsert: TemplateUpsertNestedInput
}

input TemplateUpdateOneWithoutTasksInput {
  create: TemplateCreateWithoutTasksInput
  connect: TemplateWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TemplateUpdateWithoutTasksDataInput
  upsert: TemplateUpsertWithoutTasksInput
}

input TemplateUpdateWithoutTasksDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  author: ProfileUpdateOneRequiredInput
}

input TemplateUpsertNestedInput {
  update: TemplateUpdateDataInput!
  create: TemplateCreateInput!
}

input TemplateUpsertWithoutTasksInput {
  update: TemplateUpdateWithoutTasksDataInput!
  create: TemplateCreateWithoutTasksInput!
}

input TemplateWhereInput {
  """Logical AND on all given filters."""
  AND: [TemplateWhereInput!]

  """Logical OR on all given filters."""
  OR: [TemplateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TemplateWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  script: String

  """All values that are not equal to given value."""
  script_not: String

  """All values that are contained in given list."""
  script_in: [String!]

  """All values that are not contained in given list."""
  script_not_in: [String!]

  """All values less than the given value."""
  script_lt: String

  """All values less than or equal the given value."""
  script_lte: String

  """All values greater than the given value."""
  script_gt: String

  """All values greater than or equal the given value."""
  script_gte: String

  """All values containing the given string."""
  script_contains: String

  """All values not containing the given string."""
  script_not_contains: String

  """All values starting with the given string."""
  script_starts_with: String

  """All values not starting with the given string."""
  script_not_starts_with: String

  """All values ending with the given string."""
  script_ends_with: String

  """All values not ending with the given string."""
  script_not_ends_with: String
  style: String

  """All values that are not equal to given value."""
  style_not: String

  """All values that are contained in given list."""
  style_in: [String!]

  """All values that are not contained in given list."""
  style_not_in: [String!]

  """All values less than the given value."""
  style_lt: String

  """All values less than or equal the given value."""
  style_lte: String

  """All values greater than the given value."""
  style_gt: String

  """All values greater than or equal the given value."""
  style_gte: String

  """All values containing the given string."""
  style_contains: String

  """All values not containing the given string."""
  style_not_contains: String

  """All values starting with the given string."""
  style_starts_with: String

  """All values not starting with the given string."""
  style_not_starts_with: String

  """All values ending with the given string."""
  style_ends_with: String

  """All values not ending with the given string."""
  style_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
}

input TemplateWhereUniqueInput {
  id: ID
  slug: String
}
