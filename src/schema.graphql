# import * from './generated/prisma.graphql'

type Query {
  me: Profile
  users: [Profile]!
  schools: [School]!
  experiment(where: ExperimentWhereUniqueInput): Experiment
  experiments (where: ExperimentWhereInput, orderBy: ExperimentOrderByInput, skip: Int, first: Int): [Experiment]!
  class(where: ClassWhereUniqueInput): Class
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, first: Int): [Class]!
  myResults: [Result]!
  result(where: ResultWhereUniqueInput): Result
  parameters: [Parameter]!
  myParameters: [Parameter]!
  parameter(where: ParameterWhereUniqueInput): Parameter
}

type Mutation {
  emailSignUp(email: String!, password: String!, username: String!): Profile!
  emailLogin(email: String!, password: String!): Profile!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): Profile!

  tokenSignUp(username: String!, token: String!, email: String): Profile!
  tokenLogin(username: String!): Profile!

  inviteSignUp(username: String!, invitedIn: ID!, image: String, largeImage: String, info: Json): Profile!
  inviteLogin(username: String!, invitedIn: ID!): Profile!

  createSchool(title: String!, description: String, image: String, largeImage: String): School!

  createClass(title: String!, description: String, image: String, largeImage: String): Class!
  updateClass(id: ID!, title: String, description: String, image: String, largeImage: String): Class!
  deleteClass(id: ID!): Class
  joinClass(id: ID!): SuccessMessage
  leaveClass(id: ID!): SuccessMessage

  createExperiment(title: String!, description: String, image: String, largeImage: String, parameters: Json): Experiment!
  updateExperiment(id: ID!, title: String, description: String, parameters: Json): Experiment!
  deleteExperiment(id: ID!): Experiment

  addResult(experimentId: ID!, data: Json, dataPolicy: String): Result!
  deleteResult(id: ID!): Result

  createParameter(title: String!, experimentId: ID!, data: Json): Parameter!
  updateParameter(id: ID!, title: String, data: Json): Parameter!
  deleteParameter(id: ID!): Parameter
}

type SuccessMessage {
  message: String
}

type Profile {
  id: ID!
  username: String!
  permissions: [Permission!]!
  results: [Result]!
  studentIn: [Class]!
  info: Json
  image: String
  largeImage: String
}
